# A list of file extensions that nanoc will consider to be textual rather than
# binary. If an item with an extension not in this list is found,  the file
# will be considered as binary.
text_extensions: [ 'css', 'erb', 'haml', 'htm', 'html', 'js', 'less', 'markdown', 'md', 'php', 'rb', 'sass', 'scss', 'txt', 'xhtml', 'xml' ]

# The path to the directory where all generated files will be written to. This
# can be an absolute path starting with a slash, but it can also be path
# relative to the site directory.
output_dir: output

meta_data:
  # Default title, that is added to an item's own title
  title: Untitled website

  # Default author of a page
  author: <Author Name>

  # Default keywords to use when an item does not specify its own
  keywords: 'keyword1, keyword2'

  # Default description to use when an item does not specify its own
  description: Undescribed website.

  # Copyright line used in the document header meta tag.
  copyright: "© copyright 2010 <Author Name>. All rights reserved."

  # Language code of the site's content. Used in HTML attributes.
  lang: 'en'

# The base URL for the website, for use in sitemaps etc. Something like
# http://domain.tld
base_url: http://nanoc-blog-kit.mgutz.com

# currently used by logo
site_name: nanoc3_blog

# number of full featured posts to display on front
featured_count: 0

# number of excerpted posts to display on front
excerpt_count: 6

# number of other articles to reference at bottom of each article
other_articles_max: 3

# DISQUS Site Shortname. Comment out to disable.
disqus_shortname: nanoc3-blog

# The path on the base URL users should be sent to when accessing the feed.
# This gets rewritten to point at your feedburner_url option, which will
# in turn know the location of the real URL.
feed_url: /feed
feedburner_url: http://feeds.feedburner.com/MyFeed

# Set up authentication files for various webmaster tools (or something
# similar). This simply creates a plain text file when generating the site.
#
# identifier: identifier of the output file, e.g. '/google12345/'
# content: content of the file, e.g. 'aoa8202ns001'
# extension: extension of the output file, e.g. 'html' or 'xml'
webmaster_tools:
  -
    identifier: "google12345" # the nanoc identifier for this item
    content: "some content goes here"
    extension: "html" # Bing uses xml

# Should Nanoc generate some standard asset files for you, or skip them
# completely?
#
# This currently controls the generation of webmaster tools authentication files.
output_generated_assets: true

# Google Analytics
google_analytics:
  domain: mgutz.com
  site_id: UA-9655468-1

# Deployment targets using rsync. The default target will remove all that's
# already there and replace it with the contents of the /output directory.
deploy:
  default:
    dst: "mgutz_com:www/nanoc3_blog"
    options: ['-ave ssh', '--exclude=.DS_Store', '--exclude=*~']
  staging:
    dst: "host:path"
    options: ['-glpPrtvz', '--delete']

# A list of index filenames, i.e. names of files that will be served by a web
# server when a directory is requested. Usually, index files are named
# “index.hml”, but depending on the web server, this may be something else,
# such as “default.htm”. This list is used by nanoc to generate pretty URLs.
index_filenames: [ 'index.html' ]

# Whether or not to generate a diff of the compiled content when compiling a
# site. The diff will contain the differences between the compiled content
# before and after the last site compilation.
enable_output_diff: false

# The data sources where nanoc loads its data from. This is an array of
# hashes; each array element represents a single data source. By default,
# there is only a single data source that reads data from the “content/” and
# “layout/” directories in the site directory.
data_sources:
  -
    # The type is the identifier of the data source. By default, this will be
    # `filesystem_unified`.
    type: filesystem_unified

    # The path where items should be mounted (comparable to mount points in
    # Unix-like systems). This is “/” by default, meaning that items will have
    # “/” prefixed to their identifiers. If the items root were “/en/”
    # instead, an item at content/about.html would have an identifier of
    # “/en/about/” instead of just “/about/”.
    items_root: /

    # The path where layouts should be mounted. The layouts root behaves the
    # same as the items root, but applies to layouts rather than items.
    layouts_root: /

# Configuration for the “watch” command, which watches a site for changes and
# recompiles if necessary.
watcher:
  # A list of directories to watch for changes. When editing this, make sure
  # that the “output/” and “tmp/” directories are _not_ included in this list,
  # because recompiling the site will cause these directories to change, which
  # will cause the site to be recompiled, which will cause these directories
  # to change, which will cause the site to be recompiled again, and so on.
  dirs_to_watch: [ 'content', 'layouts', 'lib' ]

  # A list of single files to watch for changes. As mentioned above, don’t put
  # any files from the “output/” or “tmp/” directories in here.
  files_to_watch: [ 'config.yaml', 'Rules' ]

  # When to send notifications (using Growl or notify-send).
  notify_on_compilation_success: true
  notify_on_compilation_failure: true

